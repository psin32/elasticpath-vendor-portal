import { Template } from "../types/template";

export const sampleTemplates: Omit<
  Template,
  "id" | "createdAt" | "updatedAt"
>[] = [
  {
    name: "Product Catalog",
    description:
      "Template for importing product information including SKU, name, pricing, and categories",
    entityType: "products",
    fields: [
      {
        id: "field_sku",
        name: "sku",
        label: "SKU",
        type: "text",
        required: true,
        validationRules: [
          {
            type: "minLength",
            value: 3,
            message: "SKU must be at least 3 characters",
          },
          {
            type: "maxLength",
            value: 50,
            message: "SKU must not exceed 50 characters",
          },
        ],
        order: 0,
        description: "Unique product identifier",
      },
      {
        id: "field_name",
        name: "name",
        label: "Product Name",
        type: "text",
        required: true,
        validationRules: [
          {
            type: "minLength",
            value: 2,
            message: "Product name must be at least 2 characters",
          },
          {
            type: "maxLength",
            value: 200,
            message: "Product name must not exceed 200 characters",
          },
        ],
        order: 1,
        description: "Display name of the product",
      },
      {
        id: "field_description",
        name: "description",
        label: "Description",
        type: "text",
        required: false,
        validationRules: [
          {
            type: "maxLength",
            value: 1000,
            message: "Description must not exceed 1000 characters",
          },
        ],
        order: 2,
        description: "Detailed product description",
      },
      {
        id: "field_price",
        name: "price",
        label: "Price",
        type: "currency",
        required: true,
        validationRules: [
          { type: "min", value: 0, message: "Price must be positive" },
        ],
        order: 3,
        description: "Product price in USD",
      },
      {
        id: "field_category",
        name: "category",
        label: "Category",
        type: "select",
        required: true,
        validationRules: [],
        selectOptions: [
          { value: "electronics", label: "Electronics" },
          { value: "clothing", label: "Clothing" },
          { value: "books", label: "Books" },
          { value: "home", label: "Home & Garden" },
          { value: "sports", label: "Sports & Outdoors" },
        ],
        order: 4,
        description: "Product category",
      },
      {
        id: "field_status",
        name: "status",
        label: "Status",
        type: "select",
        required: true,
        validationRules: [],
        selectOptions: [
          { value: "active", label: "Active" },
          { value: "inactive", label: "Inactive" },
          { value: "draft", label: "Draft" },
        ],
        defaultValue: "draft",
        order: 5,
        description: "Product status",
      },
      {
        id: "field_weight",
        name: "weight",
        label: "Weight (kg)",
        type: "number",
        required: false,
        validationRules: [
          { type: "min", value: 0, message: "Weight must be positive" },
        ],
        order: 6,
        description: "Product weight in kilograms",
      },
    ],
  },
  {
    name: "Customer Information",
    description:
      "Template for customer data import including contact details and preferences",
    entityType: "customers",
    fields: [
      {
        id: "field_email",
        name: "email",
        label: "Email Address",
        type: "email",
        required: true,
        validationRules: [],
        order: 0,
        description: "Customer email address",
      },
      {
        id: "field_first_name",
        name: "first_name",
        label: "First Name",
        type: "text",
        required: true,
        validationRules: [
          { type: "minLength", value: 1, message: "First name is required" },
          {
            type: "maxLength",
            value: 50,
            message: "First name must not exceed 50 characters",
          },
        ],
        order: 1,
        description: "Customer first name",
      },
      {
        id: "field_last_name",
        name: "last_name",
        label: "Last Name",
        type: "text",
        required: true,
        validationRules: [
          { type: "minLength", value: 1, message: "Last name is required" },
          {
            type: "maxLength",
            value: 50,
            message: "Last name must not exceed 50 characters",
          },
        ],
        order: 2,
        description: "Customer last name",
      },
      {
        id: "field_phone",
        name: "phone",
        label: "Phone Number",
        type: "phone",
        required: false,
        validationRules: [],
        order: 3,
        description: "Customer phone number",
      },
      {
        id: "field_company",
        name: "company",
        label: "Company",
        type: "text",
        required: false,
        validationRules: [
          {
            type: "maxLength",
            value: 100,
            message: "Company name must not exceed 100 characters",
          },
        ],
        order: 4,
        description: "Customer company name",
      },
      {
        id: "field_subscription",
        name: "newsletter_subscription",
        label: "Newsletter Subscription",
        type: "boolean",
        required: false,
        validationRules: [],
        defaultValue: "false",
        order: 5,
        description: "Customer newsletter subscription preference",
      },
      {
        id: "field_registration_date",
        name: "registration_date",
        label: "Registration Date",
        type: "date",
        required: false,
        validationRules: [],
        order: 6,
        description: "Customer registration date",
      },
    ],
  },
  {
    name: "Order Data",
    description:
      "Template for order information including customer, items, and status tracking",
    entityType: "orders",
    fields: [
      {
        id: "field_order_id",
        name: "order_id",
        label: "Order ID",
        type: "text",
        required: true,
        validationRules: [
          {
            type: "minLength",
            value: 5,
            message: "Order ID must be at least 5 characters",
          },
        ],
        order: 0,
        description: "Unique order identifier",
      },
      {
        id: "field_customer_email",
        name: "customer_email",
        label: "Customer Email",
        type: "email",
        required: true,
        validationRules: [],
        order: 1,
        description: "Customer email address",
      },
      {
        id: "field_order_date",
        name: "order_date",
        label: "Order Date",
        type: "date",
        required: true,
        validationRules: [],
        order: 2,
        description: "Date when order was placed",
      },
      {
        id: "field_total_amount",
        name: "total_amount",
        label: "Total Amount",
        type: "currency",
        required: true,
        validationRules: [
          { type: "min", value: 0, message: "Total amount must be positive" },
        ],
        order: 3,
        description: "Order total amount",
      },
      {
        id: "field_status",
        name: "status",
        label: "Order Status",
        type: "select",
        required: true,
        validationRules: [],
        selectOptions: [
          { value: "pending", label: "Pending" },
          { value: "processing", label: "Processing" },
          { value: "shipped", label: "Shipped" },
          { value: "delivered", label: "Delivered" },
          { value: "cancelled", label: "Cancelled" },
        ],
        defaultValue: "pending",
        order: 4,
        description: "Current order status",
      },
      {
        id: "field_payment_method",
        name: "payment_method",
        label: "Payment Method",
        type: "select",
        required: true,
        validationRules: [],
        selectOptions: [
          { value: "credit_card", label: "Credit Card" },
          { value: "debit_card", label: "Debit Card" },
          { value: "paypal", label: "PayPal" },
          { value: "bank_transfer", label: "Bank Transfer" },
          { value: "cash", label: "Cash" },
        ],
        order: 5,
        description: "Payment method used",
      },
      {
        id: "field_shipping_address",
        name: "shipping_address",
        label: "Shipping Address",
        type: "text",
        required: false,
        validationRules: [
          {
            type: "maxLength",
            value: 500,
            message: "Shipping address must not exceed 500 characters",
          },
        ],
        order: 6,
        description: "Customer shipping address",
      },
    ],
  },
];

export const createSampleTemplate = (
  templateData: (typeof sampleTemplates)[0]
): Template => {
  return {
    ...templateData,
    id: `template_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,
    createdAt: new Date(),
    updatedAt: new Date(),
  };
};
